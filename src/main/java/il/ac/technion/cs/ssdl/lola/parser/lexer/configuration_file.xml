<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="msp-config.css"?>
<configuration-file xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="msp-config.xsd">
	<configuration-element>
		<token>
			<token-name>ignore</token-name>
			<regular-expression>
				<or>
					<!-- <regular-expression>
						<special-character>carriage return new line</special-character>
					</regular-expression> -->
					<regular-expression>
						<special-character>horizontal tab</special-character>
					</regular-expression>
					<!-- <regular-expression>
						<special-character>new line</special-character>
					</regular-expression> -->
					<regular-expression> 
						<special-character>vertical tab</special-character>
					</regular-expression>
					<!-- <regular-expression>
						<special-character>form feed</special-character>
					</regular-expression>
					<regular-expression>
						<special-character>carriage return</special-character>
					</regular-expression> -->
					<regular-expression>
						<special-character>space</special-character>
					</regular-expression>
				</or>
			</regular-expression>
			<ignored>true</ignored>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>tridot</token-name>
			<regular-expression>
				<string>
					<value>...</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>eqrsh</token-name>
			<regular-expression>
				<string>
					<value>>>=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>eqlsh</token-name>
			<regular-expression>
				<string>
					<value>&lt;&lt;=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>eqadd</token-name>
			<regular-expression>
				<string>
					<value>+=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>eqmul</token-name>
			<regular-expression>
				<string>
					<value>*=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>eqdiv</token-name>
			<regular-expression>
				<string>
					<value>/=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>eqmod</token-name>
			<regular-expression>
				<string>
					<value>%=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>eqand</token-name>
			<regular-expression>
				<string>
					<value>&amp;=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>eqor</token-name>
			<regular-expression>
				<string>
					<value>|=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>eqxor</token-name>
			<regular-expression>
				<string>
					<value>^=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>eqop</token-name>
			<token-name-reference>eqrsh</token-name-reference>
			<token-name-reference>eqlsh</token-name-reference>
			<token-name-reference>eqadd</token-name-reference>
			<token-name-reference>eqmul</token-name-reference>
			<token-name-reference>eqdiv</token-name-reference>
			<token-name-reference>eqmod</token-name-reference>
			<token-name-reference>eqand</token-name-reference>
			<token-name-reference>eqor</token-name-reference>
			<token-name-reference>eqxor</token-name-reference>
		</classification>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>birsh</token-name>
			<regular-expression>
				<string>
					<value>>></value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>bilsh</token-name>
			<regular-expression>
				<string>
					<value>&lt;&lt;</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>plus</token-name>
			<regular-expression>
				<string>
					<value>+</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>minus</token-name>
			<regular-expression>
				<string>
					<value>-</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>uninc</token-name>
			<regular-expression>
				<string>
					<value>++</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>undec</token-name>
			<regular-expression>
				<string>
					<value>--</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>biandlogic</token-name>
			<regular-expression>
				<string>
					<value>&amp;&amp;</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>biorlogic</token-name>
			<regular-expression>
				<string>
					<value>||</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>bilesseq</token-name>
			<regular-expression>
				<string>
					<value>&lt;=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>bigreatereq</token-name>
			<regular-expression>
				<string>
					<value>&gt;=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>bieq</token-name>
			<regular-expression>
				<string>
					<value>==</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>bineq</token-name>
			<regular-expression>
				<string>
					<value>!=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>or</token-name>
			<regular-expression>
				<string>
					<value>|</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>bixor</token-name>
			<regular-expression>
				<string>
					<value>^</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>bimod</token-name>
			<regular-expression>
				<string>
					<value>%</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>bigreater</token-name>
			<regular-expression>
				<string>
					<value>&gt;</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>biless</token-name>
			<regular-expression>
				<string>
					<value>&lt;</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>bidiv</token-name>
			<regular-expression>
				<string>
					<value>/</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>star</token-name>
			<regular-expression>
				<string>
					<value>*</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>amp</token-name>
			<regular-expression>
				<string>
					<value>&amp;</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>biop</token-name>
			<token-name-reference>birsh</token-name-reference>
			<token-name-reference>bilsh</token-name-reference>
			<token-name-reference>plus</token-name-reference>
			<token-name-reference>minus</token-name-reference>
			<token-name-reference>biandlogic</token-name-reference>
			<token-name-reference>biorlogic</token-name-reference>
			<token-name-reference>bilesseq</token-name-reference>
			<token-name-reference>bigreatereq</token-name-reference>
			<token-name-reference>bieq</token-name-reference>
			<token-name-reference>bineq</token-name-reference>
			<token-name-reference>amp</token-name-reference>
			<token-name-reference>or</token-name-reference>
			<token-name-reference>bixor</token-name-reference>
			<token-name-reference>bimod</token-name-reference>
			<token-name-reference>bigreater</token-name-reference>
			<token-name-reference>biless</token-name-reference>
			<token-name-reference>star</token-name-reference>
			<token-name-reference>bidiv</token-name-reference>
		</classification>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>unnot</token-name>
			<regular-expression>
				<string>
					<value>!</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>unneg</token-name>
			<regular-expression>
				<string>
					<value>~</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>unop</token-name>
			<token-name-reference>plus</token-name-reference>
			<token-name-reference>minus</token-name-reference>
			<token-name-reference>uninc</token-name-reference>
			<token-name-reference>undec</token-name-reference>
			<token-name-reference>star</token-name-reference>
			<token-name-reference>unneg</token-name-reference>
			<token-name-reference>unnot</token-name-reference>
		</classification>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>semicolon</token-name>
			<regular-expression>
				<string>
					<value>;</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>comma</token-name>
			<regular-expression>
				<string>
					<value>,</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
		<configuration-element>
		<token>
			<token-name>apostrophe</token-name>
			<regular-expression>
				<string>
					<value>'</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>colon</token-name>
			<regular-expression>
				<string>
					<value>:</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>dot</token-name>
			<regular-expression>
				<string>
					<value>.</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>arrow</token-name>
			<regular-expression>
				<string>
					<value>-></value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>eq</token-name>
			<regular-expression>
				<string>
					<value>=</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>ques</token-name>
			<regular-expression>
				<string>
					<value>?</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>punctuation</token-name>
			<token-name-reference>tridot</token-name-reference>
			<token-name-reference>semicolon</token-name-reference>
			<token-name-reference>comma</token-name-reference>
			<token-name-reference>apostrophe</token-name-reference>
			<token-name-reference>colon</token-name-reference>
			<token-name-reference>dot</token-name-reference>
			<token-name-reference>arrow</token-name-reference>
			<token-name-reference>amp</token-name-reference>
			<token-name-reference>eq</token-name-reference>
			<token-name-reference>ques</token-name-reference>
		</classification>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>diopencurly</token-name>
			<regular-expression>
				<string>
					<value>&lt;%</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>opencurly</token-name>
			<regular-expression>
				<string>
					<value>{</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<translate>
			<from>
				<token-name-reference>diopencurly</token-name-reference>
			</from>
			<to>
				<token-name-reference>opencurly</token-name-reference>
			</to>
		</translate>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>diclosecurly</token-name>
			<regular-expression>
				<string>
					<value>%&gt;</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>closecurly</token-name>
			<regular-expression>
				<string>
					<value>}</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<translate>
			<from>
				<token-name-reference>diclosecurly</token-name-reference>
			</from>
			<to>
				<token-name-reference>closecurly</token-name-reference>
			</to>
		</translate>
	</configuration-element>
	<configuration-element>
		<balance>
			<begin>
				<token-name-reference>opencurly</token-name-reference>
			</begin>
			<end>
				<token-name-reference>closecurly</token-name-reference>
			</end>
		</balance>
	</configuration-element>

	<configuration-element>
		<token>
			<token-name>openparen</token-name>
			<regular-expression>
				<string>
					<value>(</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>closeparen</token-name>
			<regular-expression>
				<string>
					<value>)</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<balance>
			<begin>
				<token-name-reference>openparen</token-name-reference>
			</begin>
			<end>
				<token-name-reference>closeparen</token-name-reference>
			</end>
		</balance>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>openbracket</token-name>
			<regular-expression>
				<string>
					<value>[</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>closebracket</token-name>
			<regular-expression>
				<string>
					<value>]</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<balance>
			<begin>
				<token-name-reference>openbracket</token-name-reference>
			</begin>
			<end>
				<token-name-reference>closebracket</token-name-reference>
			</end>
		</balance>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>void</token-name>
			<regular-expression>
				<string>
					<value>void</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>float</token-name>
			<regular-expression>
				<string>
					<value>float</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>short</token-name>
			<regular-expression>
				<string>
					<value>short</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>char</token-name>
			<regular-expression>
				<string>
					<value>char</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>double</token-name>
			<regular-expression>
				<string>
					<value>double</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>int</token-name>
			<regular-expression>
				<string>
					<value>int</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>long</token-name>
			<regular-expression>
				<string>
					<value>long</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>JavaType</token-name>
			<token-name-reference>short</token-name-reference>
			<token-name-reference>int</token-name-reference>
			<token-name-reference>long</token-name-reference>
			<token-name-reference>char</token-name-reference>
			<token-name-reference>void</token-name-reference>
			<token-name-reference>float</token-name-reference>
			<token-name-reference>double</token-name-reference>
		</classification>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>auto</token-name>
			<regular-expression>
				<string>
					<value>auto</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>const</token-name>
			<regular-expression>
				<string>
					<value>const</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>extern</token-name>
			<regular-expression>
				<string>
					<value>extern</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>register</token-name>
			<regular-expression>
				<string>
					<value>register</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>signed</token-name>
			<regular-expression>
				<string>
					<value>signed</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>static</token-name>
			<regular-expression>
				<string>
					<value>static</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>unsigned</token-name>
			<regular-expression>
				<string>
					<value>unsigned</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>volatile</token-name>
			<regular-expression>
				<string>
					<value>volatile</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>qualifier</token-name>
			<token-name-reference>signed</token-name-reference>
			<token-name-reference>unsigned</token-name-reference>
			<token-name-reference>volatile</token-name-reference>
			<token-name-reference>auto</token-name-reference>
			<token-name-reference>static</token-name-reference>
			<token-name-reference>extern</token-name-reference>
			<token-name-reference>const</token-name-reference>
			<token-name-reference>register</token-name-reference>
		</classification>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>break</token-name>
			<regular-expression>
				<string>
					<value>break</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>case</token-name>
			<regular-expression>
				<string>
					<value>case</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>continue</token-name>
			<regular-expression>
				<string>
					<value>continue</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>default</token-name>
			<regular-expression>
				<string>
					<value>default</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>do</token-name>
			<regular-expression>
				<string>
					<value>do</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>else</token-name>
			<regular-expression>
				<string>
					<value>else</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>for</token-name>
			<regular-expression>
				<string>
					<value>for</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>goto</token-name>
			<regular-expression>
				<string>
					<value>goto</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>if</token-name>
			<regular-expression>
				<string>
					<value>if</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>return</token-name>
			<regular-expression>
				<string>
					<value>return</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>switch</token-name>
			<regular-expression>
				<string>
					<value>switch</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>while</token-name>
			<regular-expression>
				<string>
					<value>while</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>ctrlflow</token-name>
			<token-name-reference>break</token-name-reference>
			<token-name-reference>case</token-name-reference>
			<token-name-reference>continue</token-name-reference>
			<token-name-reference>default</token-name-reference>
			<token-name-reference>do</token-name-reference>
			<token-name-reference>else</token-name-reference>
			<token-name-reference>for</token-name-reference>
			<token-name-reference>goto</token-name-reference>
			<token-name-reference>if</token-name-reference>
			<token-name-reference>return</token-name-reference>
			<token-name-reference>switch</token-name-reference>
			<token-name-reference>while</token-name-reference>
		</classification>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>enum</token-name>
			<regular-expression>
				<string>
					<value>enum</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>class</token-name>
			<regular-expression>
				<string>
					<value>class</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>interface</token-name>
			<regular-expression>
				<string>
					<value>interface</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>typedef</token-name>
			<regular-expression>
				<string>
					<value>typedef</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>TypeKeyword</token-name>
			<token-name-reference>interface</token-name-reference>
			<token-name-reference>class</token-name-reference>
			<token-name-reference>enum</token-name-reference>
		</classification>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>sizeof</token-name>
			<regular-expression>
				<string>
					<value>sizeof</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>keyword</token-name>
			<token-name-reference>JavaType</token-name-reference>
			<token-name-reference>qualifier</token-name-reference>
			<token-name-reference>ctrlflow</token-name-reference>
			<token-name-reference>TypeKeyword</token-name-reference>
			<token-name-reference>sizeof</token-name-reference>
		</classification>
	</configuration-element>




	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>D</regular-expression-name>
			<regular-expression>
				<range>
					<range-from>0</range-from>
					<range-to>9</range-to>
				</range>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>
	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>L</regular-expression-name>
			<regular-expression>
				<or>
					<regular-expression>
						<range>
							<range-from>A</range-from>
							<range-to>Z</range-to>
						</range>
					</regular-expression>
					<regular-expression>
						<range>
							<range-from>a</range-from>
							<range-to>z</range-to>
						</range>
					</regular-expression>
					<regular-expression>
						<string>
							<value>_</value>
						</string>
					</regular-expression>
				</or>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>
	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>H</regular-expression-name>
			<regular-expression>
				<or>
					<regular-expression>
						<range>
							<range-from>A</range-from>
							<range-to>F</range-to>
						</range>
					</regular-expression>
					<regular-expression>
						<range>
							<range-from>a</range-from>
							<range-to>f</range-to>
						</range>
					</regular-expression>
					<regular-expression>
						<range>
							<range-from>0</range-from>
							<range-to>9</range-to>
						</range>
					</regular-expression>
				</or>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>
	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>E</regular-expression-name>
			<regular-expression>
				<sequence>
					<regular-expression>
						<string>
							<case>insensitive</case>
							<value>e</value>
						</string>
					</regular-expression>
					<regular-expression>
						<occurrences>?</occurrences>
						<or>
							<regular-expression>
								<string>
									<value>+</value>
								</string>
							</regular-expression>
							<regular-expression>
								<string>
									<value>-</value>
								</string>
							</regular-expression>
						</or>
					</regular-expression>
					<regular-expression>
						<occurrences>+</occurrences>
						<regular-expression-reference>D</regular-expression-reference>
					</regular-expression>
				</sequence>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>
	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>FS</regular-expression-name>
			<regular-expression>
				<or>
					<regular-expression>
						<string>
							<case>insensitive</case>
							<value>f</value>
						</string>
					</regular-expression>
					<regular-expression>
						<string>
							<case>insensitive</case>
							<value>l</value>
						</string>
					</regular-expression>
				</or>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>
	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>LS</regular-expression-name>
			<regular-expression>
				<string>
					<case>insensitive</case>
					<value>l</value>
				</string>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>
	<!-- The following is the suffix for long longs -->
	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>LLS</regular-expression-name>
			<regular-expression>
				<sequence>
					<regular-expression>
						<regular-expression-reference>LS</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<regular-expression-reference>LS</regular-expression-reference>
					</regular-expression>
				</sequence>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>
	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>NS</regular-expression-name>
			<regular-expression>
				<string>
					<value />
				</string>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>
	<!-- Unsigned integer suffix -->
	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>UIS</regular-expression-name>
			<regular-expression>
				<string>
					<case>insensitive</case>
					<value>u</value>
				</string>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>
	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>ULS</regular-expression-name>
			<regular-expression>
				<or>
					<regular-expression>
						<sequence>
							<regular-expression>
								<regular-expression-reference>UIS</regular-expression-reference>
							</regular-expression>
							<regular-expression>
								<regular-expression-reference>LS</regular-expression-reference>
							</regular-expression>
						</sequence>
					</regular-expression>
					<regular-expression>
						<sequence>
							<regular-expression>
								<regular-expression-reference>LS</regular-expression-reference>
							</regular-expression>
							<regular-expression>
								<regular-expression-reference>UIS</regular-expression-reference>
							</regular-expression>
						</sequence>
					</regular-expression>
				</or>
			</regular-expression>
		</regular-expression-definition>

	</configuration-element>
	<configuration-element>
		<regular-expression-definition>

			<regular-expression-name>ULLS</regular-expression-name>
			<regular-expression>
				<or>
					<regular-expression>
						<sequence>
							<regular-expression>
								<regular-expression-reference>UIS</regular-expression-reference>
							</regular-expression>
							<regular-expression>
								<regular-expression-reference>LLS</regular-expression-reference>
							</regular-expression>
						</sequence>
					</regular-expression>
					<regular-expression>
						<sequence>
							<regular-expression>
								<regular-expression-reference>LLS</regular-expression-reference>
							</regular-expression>
							<regular-expression>
								<regular-expression-reference>UIS</regular-expression-reference>
							</regular-expression>
						</sequence>
					</regular-expression>
				</or>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>
	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>US</regular-expression-name>
			<regular-expression>
				<or>
					<regular-expression>
						<regular-expression-reference>UIS</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<regular-expression-reference>ULS</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<regular-expression-reference>ULLS</regular-expression-reference>
					</regular-expression>
				</or>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>
	<configuration-element>
		<regular-expression-definition>
			<regular-expression-name>IS</regular-expression-name>
			<regular-expression>
				<or>
					<regular-expression>
						<regular-expression-reference>US</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<regular-expression-reference>LS</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<regular-expression-reference>LLS</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<regular-expression-reference>NS</regular-expression-reference>
					</regular-expression>
				</or>
			</regular-expression>
		</regular-expression-definition>
	</configuration-element>




	<configuration-element>
		<token>
			<token-name>lhexadecimal</token-name>
			<regular-expression>
				<sequence>
					<regular-expression>
						<string>
							<value>0</value>
						</string>
					</regular-expression>
					<regular-expression>
						<string>
							<case>insensitive</case>
							<value>x</value>
						</string>
					</regular-expression>
					<regular-expression>
						<occurrences>+</occurrences>
						<regular-expression-reference>H</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<occurrences>?</occurrences>
						<regular-expression-reference>IS</regular-expression-reference>
					</regular-expression>
				</sequence>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>loctal</token-name>
			<regular-expression>
				<sequence>
					<regular-expression>
						<string>
							<value>0</value>
						</string>
					</regular-expression>
					<regular-expression>
						<occurrences>+</occurrences>
						<regular-expression-reference>D</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<occurrences>?</occurrences>
						<regular-expression-reference>IS</regular-expression-reference>
					</regular-expression>
				</sequence>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>ldecimal</token-name>
			<regular-expression>
				<sequence>
					<regular-expression>
						<occurrences>+</occurrences>
						<regular-expression-reference>D</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<occurrences>?</occurrences>
						<regular-expression-reference>IS</regular-expression-reference>
					</regular-expression>
				</sequence>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>linteger</token-name>
			<token-name-reference>lhexadecimal</token-name-reference>
			<token-name-reference>loctal</token-name-reference>
			<token-name-reference>ldecimal</token-name-reference>
		</classification>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>lfloat_form_a</token-name>
			<regular-expression>
				<sequence>
					<regular-expression>
						<occurrences>+</occurrences>
						<regular-expression-reference>D</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<regular-expression-reference>E</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<occurrences>?</occurrences>
						<regular-expression-reference>FS</regular-expression-reference>
					</regular-expression>
				</sequence>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>lfloat_form_b</token-name>
			<regular-expression>
				<sequence>
					<regular-expression>
						<occurrences>*</occurrences>
						<regular-expression-reference>D</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<string>
							<value>.</value>
						</string>
					</regular-expression>
					<regular-expression>
						<occurrences>+</occurrences>
						<regular-expression-reference>D</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<occurrences>?</occurrences>
						<regular-expression-reference>E</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<occurrences>?</occurrences>
						<regular-expression-reference>FS</regular-expression-reference>
					</regular-expression>
				</sequence>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>lfloat_form_c</token-name>
			<regular-expression>
				<sequence>
					<regular-expression>
						<occurrences>+</occurrences>
						<regular-expression-reference>D</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<string>
							<value>.</value>
						</string>
					</regular-expression>
					<regular-expression>
						<occurrences>*</occurrences>
						<regular-expression-reference>D</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<occurrences>?</occurrences>
						<regular-expression-reference>E</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<occurrences>?</occurrences>
						<regular-expression-reference>FS</regular-expression-reference>
					</regular-expression>
				</sequence>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>lfloat</token-name>
			<token-name-reference>lfloat_form_a</token-name-reference>
			<token-name-reference>lfloat_form_b</token-name-reference>
			<token-name-reference>lfloat_form_c</token-name-reference>
		</classification>
	</configuration-element>
	<configuration-element>
		<regular-expression-definition>

			<regular-expression-name>WS</regular-expression-name>
			<regular-expression>
				<or>
				<!--	<regular-expression>
						<special-character>carriage return new line</special-character>
					</regular-expression> -->
					<regular-expression>
						<special-character>horizontal tab</special-character>
					</regular-expression>
					<regular-expression>
					<!--	<special-character>new line</special-character>
					</regular-expression>
					<regular-expression> -->
						<special-character>vertical tab</special-character>
					</regular-expression>
					<regular-expression>
					<!--	<special-character>form feed</special-character>
					</regular-expression>
					<regular-expression>
						<special-character>carriage return</special-character>
					</regular-expression>
					<regular-expression> -->
						<special-character>space</special-character>
					</regular-expression>
				</or>
			</regular-expression>

		</regular-expression-definition>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>lstring</token-name>
			<regular-expression>
				<occurrences>+</occurrences>
				<sequence>
					<regular-expression>
						<string>
							<value>"</value>
						</string>
					</regular-expression>
					<regular-expression>
						<occurrences>*</occurrences>
						<or>
							<regular-expression>
								<character-negation>
									<value>"\</value>
								</character-negation>
							</regular-expression>
							<regular-expression>
								<sequence>
									<regular-expression>
										<string>
											<value>\</value>
										</string>
									</regular-expression>
									<regular-expression>
										<or>
											<regular-expression>
												<or>
													<regular-expression>
														<string>
															<value>'</value>
														</string>
													</regular-expression>
													<regular-expression>
														<string>
															<value>"</value>
														</string>
													</regular-expression>
													<regular-expression>
														<string>
															<value>?</value>
														</string>
													</regular-expression>
													<regular-expression>
														<string>
															<value>\</value>
														</string>
													</regular-expression>
													<regular-expression>
														<string>
															<value>a</value>
														</string>
													</regular-expression>
													<regular-expression>
														<string>
															<value>b</value>
														</string>
													</regular-expression>
													<regular-expression>
														<string>
															<value>f</value>
														</string>
													</regular-expression>
													<regular-expression>
														<string>
															<value>n</value>
														</string>
													</regular-expression>
													<regular-expression>
														<string>
															<value>r</value>
														</string>
													</regular-expression>
													<regular-expression>
														<string>
															<value>t</value>
														</string>
													</regular-expression>
													<regular-expression>
														<string>
															<value>v</value>
														</string>
													</regular-expression>
												</or>
											</regular-expression>
											<regular-expression>
												<sequence>
													<regular-expression>
														<range>
															<range-from>0</range-from>
															<range-to>7</range-to>
														</range>
													</regular-expression>
													<regular-expression>
														<occurrences>?</occurrences>
														<range>
															<range-from>0</range-from>
															<range-to>7</range-to>
														</range>
													</regular-expression>
													<regular-expression>
														<occurrences>?</occurrences>
														<range>
															<range-from>0</range-from>
															<range-to>7</range-to>
														</range>
													</regular-expression>
												</sequence>
											</regular-expression>
											<regular-expression>
												<sequence>
													<regular-expression>
														<string>
															<value>x</value>
														</string>
													</regular-expression>
													<regular-expression>
														<occurrences>+</occurrences>
														<regular-expression-reference>H</regular-expression-reference>
													</regular-expression>
												</sequence>
											</regular-expression>
										</or>
									</regular-expression>
								</sequence>
							</regular-expression>
						</or>
					</regular-expression>
					<regular-expression>
						<string>
							<value>"</value>
						</string>
					</regular-expression>
				</sequence>
			</regular-expression>
		</token>
	</configuration-element>

	<configuration-element>
		<token>
			<token-name>identifier</token-name>
			<regular-expression>
				<sequence>
					<regular-expression>
						<regular-expression-reference>L</regular-expression-reference>
					</regular-expression>
					<regular-expression>
						<occurrences>*</occurrences>
						<or>
							<regular-expression>
								<regular-expression-reference>L</regular-expression-reference>
							</regular-expression>
							<regular-expression>
								<regular-expression-reference>D</regular-expression-reference>
							</regular-expression>
						</or>
					</regular-expression>
				</sequence>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<token>
			<token-name>character</token-name>
			<regular-expression>
				<sequence>
					<regular-expression>
						<string>
							<value>'</value>
						</string>
					</regular-expression>
					<regular-expression>
						<or>
							<regular-expression>
								<regular-expression-reference>D</regular-expression-reference>
							</regular-expression>
							<regular-expression>
								<regular-expression-reference>L</regular-expression-reference>		
							</regular-expression>
						</or>
					</regular-expression>
					<regular-expression>
						<string>
							<value>'</value>
						</string>
					</regular-expression>
				</sequence>
			</regular-expression>
		</token>
	</configuration-element>
	<configuration-element>
		<classification>
			<token-name>literal</token-name>
			<token-name-reference>linteger</token-name-reference>
			<token-name-reference>lfloat</token-name-reference>
			<token-name-reference>lstring</token-name-reference>
			<token-name-reference>character</token-name-reference>
		</classification>
	</configuration-element>
	
	<configuration-element>
		<lola-escape-character>
			<value>##</value>
		</lola-escape-character>
	</configuration-element>
	
	<configuration-element>
		<token>
			<token-name>sharp</token-name>
			<regular-expression>
				<string>
					<value>#</value>
				</string>
			</regular-expression>
		</token>
	</configuration-element>
	

</configuration-file>
