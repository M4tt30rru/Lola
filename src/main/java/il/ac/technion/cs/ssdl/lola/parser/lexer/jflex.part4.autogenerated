<YYINITIAL> ((\t))    { Token $ = token("ignore"); yycolumn += (3 - yycolumn % 4); return $;}
<YYINITIAL>((((\t))|((\v))|((" "))))	{ return token("ignore"); }
<YYINITIAL>(("..."))	{ return token("tridot"); }
<YYINITIAL>((">>="))	{ return token("eqrsh"); }
<YYINITIAL>(("<<="))	{ return token("eqlsh"); }
<YYINITIAL>(("+="))	{ return token("eqadd"); }
<YYINITIAL>(("*="))	{ return token("eqmul"); }
<YYINITIAL>(("/="))	{ return token("eqdiv"); }
<YYINITIAL>(("%="))	{ return token("eqmod"); }
<YYINITIAL>(("&="))	{ return token("eqand"); }
<YYINITIAL>(("|="))	{ return token("eqor"); }
<YYINITIAL>(("^="))	{ return token("eqxor"); }
<YYINITIAL>((">>"))	{ return token("birsh"); }
<YYINITIAL>(("<<"))	{ return token("bilsh"); }
<YYINITIAL>(("+"))	{ return token("plus"); }
<YYINITIAL>(("-"))	{ return token("minus"); }
<YYINITIAL>(("++"))	{ return token("uninc"); }
<YYINITIAL>(("--"))	{ return token("undec"); }
<YYINITIAL>(("&&"))	{ return token("biandlogic"); }
<YYINITIAL>(("||"))	{ return token("biorlogic"); }
<YYINITIAL>(("<="))	{ return token("bilesseq"); }
<YYINITIAL>((">="))	{ return token("bigreatereq"); }
<YYINITIAL>(("=="))	{ return token("bieq"); }
<YYINITIAL>(("!="))	{ return token("bineq"); }
<YYINITIAL>(("|"))	{ return token("or"); }
<YYINITIAL>(("^"))	{ return token("bixor"); }
<YYINITIAL>(("%"))	{ return token("bimod"); }
<YYINITIAL>((">"))	{ return token("bigreater"); }
<YYINITIAL>(("<"))	{ return token("biless"); }
<YYINITIAL>(("/"))	{ return token("bidiv"); }
<YYINITIAL>(("*"))	{ return token("star"); }
<YYINITIAL>(("&"))	{ return token("amp"); }
<YYINITIAL>(("!"))	{ return token("unnot"); }
<YYINITIAL>(("~"))	{ return token("unneg"); }
<YYINITIAL>((";"))	{ return token("semicolon"); }
<YYINITIAL>((","))	{ return token("comma"); }
<YYINITIAL>(("'"))	{ return token("apostrophe"); }
<YYINITIAL>((":"))	{ return token("colon"); }
<YYINITIAL>(("."))	{ return token("dot"); }
<YYINITIAL>(("->"))	{ return token("arrow"); }
<YYINITIAL>(("="))	{ return token("eq"); }
<YYINITIAL>(("?"))	{ return token("ques"); }
<YYINITIAL>(("<%"))	{ return token("diopencurly"); }
<YYINITIAL>(("{"))	{ return token("opencurly"); }
<YYINITIAL>(("%>"))	{ return token("diclosecurly"); }
<YYINITIAL>(("}"))	{ return token("closecurly"); }
<YYINITIAL>(("("))	{ return token("openparen"); }
<YYINITIAL>((")"))	{ return token("closeparen"); }
<YYINITIAL>(("["))	{ return token("openbracket"); }
<YYINITIAL>(("]"))	{ return token("closebracket"); }
<YYINITIAL>(("void"))	{ return token("void"); }
<YYINITIAL>(("float"))	{ return token("float"); }
<YYINITIAL>(("short"))	{ return token("short"); }
<YYINITIAL>(("char"))	{ return token("char"); }
<YYINITIAL>(("double"))	{ return token("double"); }
<YYINITIAL>(("int"))	{ return token("int"); }
<YYINITIAL>(("long"))	{ return token("long"); }
<YYINITIAL>(("auto"))	{ return token("auto"); }
<YYINITIAL>(("const"))	{ return token("const"); }
<YYINITIAL>(("extern"))	{ return token("extern"); }
<YYINITIAL>(("register"))	{ return token("register"); }
<YYINITIAL>(("signed"))	{ return token("signed"); }
<YYINITIAL>(("static"))	{ return token("static"); }
<YYINITIAL>(("unsigned"))	{ return token("unsigned"); }
<YYINITIAL>(("volatile"))	{ return token("volatile"); }
<YYINITIAL>(("break"))	{ return token("break"); }
<YYINITIAL>(("case"))	{ return token("case"); }
<YYINITIAL>(("continue"))	{ return token("continue"); }
<YYINITIAL>(("default"))	{ return token("default"); }
<YYINITIAL>(("do"))	{ return token("do"); }
<YYINITIAL>(("else"))	{ return token("else"); }
<YYINITIAL>(("for"))	{ return token("for"); }
<YYINITIAL>(("goto"))	{ return token("goto"); }
<YYINITIAL>(("if"))	{ return token("if"); }
<YYINITIAL>(("return"))	{ return token("return"); }
<YYINITIAL>(("switch"))	{ return token("switch"); }
<YYINITIAL>(("while"))	{ return token("while"); }
<YYINITIAL>(("enum"))	{ return token("enum"); }
<YYINITIAL>(("struct"))	{ return token("struct"); }
<YYINITIAL>(("typedef"))	{ return token("typedef"); }
<YYINITIAL>(("union"))	{ return token("union"); }
<YYINITIAL>(("sizeof"))	{ return token("sizeof"); }
<YYINITIAL>(((("0"))(([xX]))(({H})+)(({IS})?)))	{ return token("lhexadecimal"); }
<YYINITIAL>(((("0"))(({D})+)(({IS})?)))	{ return token("loctal"); }
<YYINITIAL>(((({D})+)(({IS})?)))	{ return token("ldecimal"); }
<YYINITIAL>(((({D})+)(({E}))(({FS})?)))	{ return token("lfloat_form_a"); }
<YYINITIAL>(((({D})*)(("."))(({D})+)(({E})?)(({FS})?)))	{ return token("lfloat_form_b"); }
<YYINITIAL>(((({D})+)(("."))(({D})*)(({E})?)(({FS})?)))	{ return token("lfloat_form_c"); }
<YYINITIAL>(((("\""))((([^\"\\])|(((("\\"))(((((("'"))|(("\""))|(("?"))|(("\\"))|(("a"))|(("b"))|(("f"))|(("n"))|(("r"))|(("t"))|(("v"))))|(((([0-7]))(([0-7])?)(([0-7])?)))|(((("x"))(({H})+))))))))*)(("\"")))+)	{ return token("lstring"); }
<YYINITIAL>(((({L}))(((({L}))|(({D})))*)))	{ return token("identifier"); }
<YYINITIAL>(((("'"))(((({D}))|(({L}))))(("'"))))	{ return token("character"); }
<YYINITIAL>(("#"))	{ return token("sharp"); }
<YYINITIAL>##Import[ ]((({L}+)[.])*({L}+))	{ return tokenWithSnippet("lola_keyword"); }
<YYINITIAL>##Include[ ]((({L}+)[.])*({L}+))	{ return tokenWithSnippet("lola_keyword"); }
<YYINITIAL>##and	{ return token("##and"); }
<YYINITIAL>##anchor	{ return token("##anchor"); }
<YYINITIAL>##NewLine	{ return token("##NewLine"); }
<YYINITIAL>##replace	{ return token("##replace"); }
<YYINITIAL>##see	{ return token("##see"); }
<YYINITIAL>##SomeIdentifier	{ return token("##SomeIdentifier"); }
<YYINITIAL>##run	{ return token("##run"); }
<YYINITIAL>##Neither	{ return token("##Neither"); }
<YYINITIAL>##Include	{ return token("##Include"); }
<YYINITIAL>##find	{ return token("##find"); }
<YYINITIAL>##Empty	{ return token("##Empty"); }
<YYINITIAL>##Unbalanced	{ return token("##Unbalanced"); }
<YYINITIAL>##closer	{ return token("##closer"); }
<YYINITIAL>##exceptFor	{ return token("##exceptFor"); }
<YYINITIAL>##delete	{ return token("##delete"); }
<YYINITIAL>##Unless	{ return token("##Unless"); }
<YYINITIAL>##andAlso	{ return token("##andAlso"); }
<YYINITIAL>##Import	{ return token("##Import"); }
<YYINITIAL>##log	{ return token("##log"); }
<YYINITIAL>##Find	{ return token("##Find"); }
<YYINITIAL>##prepend	{ return token("##prepend"); }
<YYINITIAL>##note	{ return token("##note"); }
<YYINITIAL>##opener	{ return token("##opener"); }
<YYINITIAL>##Match	{ return token("##Match"); }
<YYINITIAL>##Splice	{ return token("##Splice"); }
<YYINITIAL>##example	{ return token("##example"); }
<YYINITIAL>##Nothing	{ return token("##Nothing"); }
<YYINITIAL>##SameLine	{ return token("##SameLine"); }
<YYINITIAL>##PermutationOf	{ return token("##PermutationOf"); }
<YYINITIAL>##Optional	{ return token("##Optional"); }
<YYINITIAL>##Case	{ return token("##Case"); }
<YYINITIAL>##followedBy	{ return token("##followedBy"); }
<YYINITIAL>##xor	{ return token("##xor"); }
<YYINITIAL>##ProperSubsetOf	{ return token("##ProperSubsetOf"); }
<YYINITIAL>##description	{ return token("##description"); }
<YYINITIAL>##resultsIn	{ return token("##resultsIn"); }
<YYINITIAL>##append	{ return token("##append"); }
<YYINITIAL>##else	{ return token("##else"); }
<YYINITIAL>##assert	{ return token("##assert"); }
<YYINITIAL>##Not	{ return token("##Not"); }
<YYINITIAL>##Xither	{ return token("##Xither"); }
<YYINITIAL>##EndOfFile	{ return token("##EndOfFile"); }
<YYINITIAL>##NoneOrMore	{ return token("##NoneOrMore"); }
<YYINITIAL>##Either	{ return token("##Either"); }
<YYINITIAL>##If	{ return token("##If"); }
<YYINITIAL>##elseIf	{ return token("##elseIf"); }
<YYINITIAL>##SubsetOf	{ return token("##SubsetOf"); }
<YYINITIAL>##Literal	{ return token("##Literal"); }
<YYINITIAL>##Identifier	{ return token("##Identifier"); }
<YYINITIAL>##with	{ return token("##with"); }
<YYINITIAL>##nor	{ return token("##nor"); }
<YYINITIAL>##BeginningOfLine	{ return token("##BeginningOfLine"); }
<YYINITIAL>##NonEmptySubsetOf	{ return token("##NonEmptySubsetOf"); }
<YYINITIAL>##ifNone	{ return token("##ifNone"); }
<YYINITIAL>##Sequence	{ return token("##Sequence"); }
<YYINITIAL>##of	{ return token("##of"); }
<YYINITIAL>##OneOrMore	{ return token("##OneOrMore"); }
<YYINITIAL>##or	{ return token("##or"); }
<YYINITIAL>##filter	{ return token("##filter"); }
<YYINITIAL>##without	{ return token("##without"); }
<YYINITIAL>##separator	{ return token("##separator"); }
<YYINITIAL>##ForEach	{ return token("##ForEach"); }
<YYINITIAL>##otherwise	{ return token("##otherwise"); }
<YYINITIAL>##Any	{ return token("##Any"); }
<YYINITIAL>##EndOfLine	{ return token("##EndOfLine"); }
<YYINITIAL>##({L}+)	{ return token("lola_keyword"); }
<YYINITIAL>##	{ return token("##"); }
<YYINITIAL>(\r\n)	{ return token("enter"); }
<YYINITIAL>((\n)|(\r))	{ return token("enter"); }
