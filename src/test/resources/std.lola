##Find(PrimitiveType)
 ##Either boolean ##or byte ##or char ##or short ##or int ##or long ##or float ##or double ##or void
##Find(Type)
 ##Either ##Identifier(n) ##or ##PrimitiveType(n)
 ##Optional <##Any>
 ##NoneOrMore []
##Find(MethodDeclaration)
 ##Type(t) ##Identifier(n) (##Any(args))
##Find(ArgumentDeclaration)
 ##Type(t) ##Identifier(n)
##Find(ArgumentDeclarationList)
 ##NoneOrMore ##ArgumentDeclaration(arg) ##separator ,
##Find(Block)
 { ##Any(statements) }
##Find(CollectionType)
 ##Either Set ##or List ##or Map

##Find(ExpressionSeparations)
 ##Either , ##or ;
##Find(expressionUnsafe)
 ##Match ##Any ##exceptFor ##Any ##ExpressionSeparations ##Any
##Find(expressionSafe)
 ##Match ##Identifier
##Find(Primary)
 ##Either this ##or super ##or ##Literal ##or ##Identifier ##or ##PrimitiveType .class ##or ##Type .class ##or (##expressionUnsafe)
##Find(CommaSeperated)
 ##Match ##Any ##exceptFor ##Any , ##Any
##Find(CommaSeperatedList)
 ##NoneOrMore ##CommaSeperated ##separator ,
##Find(PossiblePostfixes)
 ##Either ++ ##or --
##Find(PossiblePrefixes)
 ##Either ++ ##or -- ##or + ##or - ##or ~ ##or !
##Find(PossibleInfixes)
 ##Either * ##or / ##or % ##or - ##or + ##or << ##or >>> ##or >> ##or < ##or > ##or <= ##or >= ##or == ##or != ##or & ##or ^ ##or | ##or && ##or || ##or += ##or -= ##or *= ##or /= ##or &= ##or |= ##or ^= ##or >>= ##or >>>= ##or <<= ##or %=
##Find(ExpressionUnsafe)
 ##Either ##Primary ##or ##expressionUnsafe . ##expressionUnsafe ##or ##Identifier .this ##or ##expressionUnsafe . <##Any> ##or ##expressionUnsafe [ ##expressionUnsafe ] ##or ##expressionSafe ( ##CommaSeperatedList ) ##or new ##Type ( ##Any ) ##or new ##Type { ##Any } ##or new ##Type ( ##Any ) { ##Any } ##or ( ##Type ) ##expressionUnsafe ##or ##expressionUnsafe ##PossiblePostfixes ##or ##PossiblePrefixes ##expressionUnsafe ##or ##expressionUnsafe ##PossibleInfixes ##expressionUnsafe ##or ##expressionUnsafe instanceof ##Type ##or ##expressionUnsafe ? ##expressionUnsafe : ##expressionUnsafe
##Find(Expression)
 ##Match ##ExpressionUnsafe ##exceptFor new
